from Board import Board


boards={}   #dictionary of board id's and objects

def main():
       

    print("Enter commands\n")

    while(1):
        inp = input().split(' ')


        if inp[0] == "BOARD":
            if inp[1] == "CREATE":
                print("board created successfully\t",createBoard(inp[2]))


            elif inp[1] == "DELETE":
                key = int(inp[2])
                if key in boards:
                    del boards[key] 
                else:
                    print("board not found")

            elif inp[1] == "name":
                boards[inp[1]].setName = inp[3]

            elif inp[1] == "privacy":
                boards[inp[1]].setPrivacy = inp[3]
 
            elif inp[2] == "ADD_MEMBER":
                if inp[1] in boards:
                    boards[inp[1]].addMember(inp[3])

            elif inp[2] == "REMOVE_MEMBER":
                if inp[1] in boards:
                    boards[inp[1]].removeMember(inp[3])
        




        elif inp[0] == "LIST":

            if inp[1] == "CREATE":
                boardId = inp[2]
                listName = inp[3]

                if boardId in boards:  #if board exists
                    boards[boardId].createList(listName) 


            elif inp[1] == "DELETE":
                for i in boards:
                    if i.isList(inp[2]):
                        i.deleteList(inp[2])
                    else:
                        print("\nlist not found\n")

            elif inp[2] == "name":
                for i in boards:
                    if i.isList(inp[1]):
                        i.list[inp[1]].setName(inp[3])




        elif inp[0] == "CARD":

            if inp[1] == "CREATE":
                for i in boards:
                    if i.isList(inp[1]):
                        i.list[inp[1]].createCard(inp[3])

            
            elif inp[1] == "DELETE":
                for i in boards:
                    if boards[i].isCard(inp[2]) != -1:
                        k = boards[i].isCard
                        i.list[k].deleteCard(inp[2])    #i:boardID, k:listID
                        break

            else:
                cardId = inp[1]
                for i in boards:
                    if boards[i].isCard(cardId) != -1:
                        k = boards[i].isCard
                        break
                    #i=boardID k=listID
                if inp[2] == "ASSIGN":
                    i.list[k].cards[cardId].assUser(inp[3])
                
                elif inp[2] == "UNASSIGN":
                    i.list[k].cards[cardId].unAssUser()

                else:       #"MOVE:"
                    cardObj = i.list[k].cards[cardId]   #get the card object
                    i.list[k].deleteCard(cardId)    #delete card object
                    targList = inp[3]
                    for j in boards:
                        if boards[j].isList(targList):
                            boards[j].list[targList].cards.append(cardObj)     #move card to target 


                    
                
        elif inp[0] == "SHOW":
            if inp[1] == "BOARD":
                if inp[2] in boards:
                    boards[inp[2]].displayBoard()

            elif inp[1] == "LIST":
                for i in boards:
                    if boards[i].isList(inp[2]):
                        boards[i].list[inp[2]].displayList()

            
            elif inp[1] == "CARD":
                for i in boards:
                    if boards[i].isCard(cardId) != -1:
                        k = boards[i].isCard
                        break
                i.list[k].cards[inp[2]].displayCards()

            else:
                for i in boards:
                    boards[i].displayBoard()




def createBoard(bName):
    #create autogenerated id
    b = Board(id)
    b.setName(bName)
    boards[id] = b
    return id



